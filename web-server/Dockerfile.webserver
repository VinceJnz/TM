# Use a lightweight Go image
FROM golang:1.21.10-alpine
##FROM golang:1.20-alpine

# Set working directory in the container
WORKDIR /app

# Copy the Go web server source code to the container
COPY . .

# Build the Go web server
RUN go mod download
RUN go build -o webserver .

# Stage 2: Create a clean image for the final output
FROM golang:1.21.10-alpine

# Mount the shared volume containing the WASM client
VOLUME /shared

# Copy the compiled webserver binary from the builder stage
#COPY --from=builder /app/main /usr/local/bin/
COPY --from=builder /app/main .

# Set GOROOT explicitly and copy the `wasm_exec.js` support file
# We assume Go is installed in the standard location on Alpine
ENV GOROOT=/usr/local/go
COPY --from=builder $GOROOT/misc/wasm/wasm_exec.js .

# Expose the port the web server listens on
EXPOSE 8081

# Command to run the web server
CMD ["./webserver"]
