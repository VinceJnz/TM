//package main

// This is an attempt to use the gin mux
// Could not get the gin verions of this to work

import (
	"api-server/v2/app"
	"api-server/v2/localHandlers/handlerBooking"
	"api-server/v2/localHandlers/handlerUser"
	"log"

	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"
	//"github.com/go-chi/cors"
)

func main() {
	db, err := app.InitDB()
	if err != nil {
		log.Fatalf("Unable to connect to database: %v\n", err)
	}
	defer db.Close()

	r := gin.Default()

	// User routes
	user := handlerUser.New(db)
	r.GET("/users", user.GetAll)
	r.GET("/users/:id", user.Get)
	r.POST("/users", user.Create)
	r.PUT("/users/:id", user.Update)
	r.DELETE("/users/:id", user.Delete)

	// Booking routes
	booking := handlerBooking.New(db)
	r.GET("/bookings", booking.GetAll)
	r.GET("/bookings/:id", booking.Get)
	r.POST("/bookings", booking.Create)
	r.PUT("/bookings/:id", booking.Update)
	r.DELETE("/bookings/:id", booking.Delete)

	/*
		// Define CORS options
		r.Use(func(c *gin.Context) {
			c.Writer.Header().Set("Access-Control-Allow-Origin", "http://localhost:8081")
			c.Writer.Header().Set("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE")
			c.Writer.Header().Set("Access-Control-Allow-Headers", "Content-Type")

			if c.Request.Method == "OPTIONS" {
				c.AbortWithStatus(204)
				return
			}

			c.Next()
		})
	*/

	/*
		// Add CORS middleware
		corsMiddleware := cors.New(cors.Options{
			AllowedOrigins: []string{"http://localhost:8081"},
			AllowedMethods: []string{"GET", "POST", "PUT", "DELETE"},
			AllowedHeaders: []string{"Content-Type"},
		})

		r.Use(corsMiddleware.Handler)
	*/

	/*
		// Add CORS middleware
		r.Use(cors.Default())
	*/

	//*
	// Add CORS middleware with trusted proxies
	r.Use(cors.New(cors.Config{
		AllowedOrigins: []string{"http://localhost:8081"},
		AllowedMethods: []string{"GET", "POST", "PUT", "DELETE"},
		AllowedHeaders: []string{"Content-Type"},
		TrustedProxies: []string{"127.0.0.1", "::1"}, // Set trusted proxies here
	}))
	//*/

	log.Println("Server running on port 8085")
	log.Fatal(r.Run(":8085"))
}
